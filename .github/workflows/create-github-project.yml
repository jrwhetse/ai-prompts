name: Create GitHub Project

on:
  workflow_dispatch:

jobs:
  create-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq
      - name: Create new GitHub Project (beta) if not exists
        env:
          GH_TOKEN: ${{ secrets.GH_PROJECT_TOKEN }}
        run: |
          PROJECT_NAME="AI Prompts Project Management"
          OWNER="jrwhetse"
          REPO_NAME="ai-prompts"
          # Get repository node ID
          REPO_NODE_QUERY='{"query":"query { repository(owner: \"'$OWNER'\", name: \"'$REPO_NAME'\") { id projectsV2(first: 100) { nodes { id title } } } }"}'
          REPO_RESPONSE=$(curl -s -H "Authorization: bearer $GH_TOKEN" -H "Content-Type: application/json" -d "$REPO_NODE_QUERY" https://api.github.com/graphql)
          echo "Raw GraphQL response: $REPO_RESPONSE"
          REPO_NODE_ID=$(echo "$REPO_RESPONSE" | jq -r ".data.repository.id")
          PROJECT_ID=$(echo "$REPO_RESPONSE" | jq -r ".data.repository.projectsV2.nodes[] | select(.title == \"$PROJECT_NAME\") | .id")
          if [ -z "$PROJECT_ID" ]; then
            echo "Creating new GitHub Project (beta) at repository level..."
            QUERY_CREATE='{"query":"mutation { createProjectV2(input: {ownerId: \"'$REPO_NODE_ID'\", title: \"'$PROJECT_NAME'\"}) { projectV2 { id title } } }"}'
            curl -s -H "Authorization: bearer $GH_TOKEN" -H "Content-Type: application/json" -d "$QUERY_CREATE" https://api.github.com/graphql
            echo "Project created."
          else
            echo "Project already exists."
          fi

# Trivial change to force workflow re-indexing
# Last updated: 2025-05-24
