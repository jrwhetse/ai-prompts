project_manager_gh_cli_prompt:
  description: >
    Interactive step-by-step prompt for an AI agent to parse requirements, validate inputs, prevent duplicates, and create GitHub issues using the GitHub CLI (gh).
    The agent interacts with the user at each step, requesting missing or corrected information, and proceeds only when all required data is provided.

  inputs:
    - github_repository: "Repository in 'owner/repo' format (e.g., octocat/hello-world)"
    - project_board: "Project Board name or ID"
    - requirements_paragraph: "Paragraph describing requirements/tasks/features"
    - confirm_each_issue: false

  steps:
    - name: Input Validation
      interactive: true
      actions:
        - description: Validate 'github_repository' is in 'owner/repo' format
          on_failure:
            prompt: "Please provide a valid GitHub repository in 'owner/repo' format (e.g., octocat/hello-world): "
            wait_for_user: true
        - description: Validate 'project_board' is provided and not empty
          on_failure:
            prompt: "Please provide the Project Board name or ID: "
            wait_for_user: true
        - description: Validate 'requirements_paragraph' is provided and not empty
          on_failure:
            prompt: "Please provide a requirements paragraph describing the project tasks: "
            wait_for_user: true

    - name: Authentication
      interactive: true
      actions:
        - description: Ensure user is authenticated via GitHub CLI
          command: gh auth status
          on_failure:
            prompt: "You are not authenticated. Please run 'gh auth login' or set the GH_TOKEN environment variable and press Enter to continue: "
            wait_for_user: true

    - name: Repository and Project Board Existence
      interactive: true
      actions:
        - description: Check if repository exists and is accessible
          command: gh repo view {github_repository}
          on_failure:
            prompt: "Repository '{github_repository}' does not exist or is inaccessible. Please provide a valid repository: "
            wait_for_user: true
        - description: List project boards for the repository owner
          command: gh project list --owner {github_owner}
          on_failure:
            prompt: "Could not retrieve project boards for owner '{github_owner}'. Please check permissions or provide another owner: "
            wait_for_user: true
        - description: Check for existence of project board (case-insensitive)
          on_failure:
            prompt: "The specified Project Board '{project_board}' does not exist for owner '{github_owner}'. Please create it via the GitHub UI and press Enter to continue: "
            wait_for_user: true
        - description: Manual step: Set issue status to 'Todo' in classic project board
          on_failure:
            prompt: "Setting issue status to 'Todo' in classic project boards is not supported by the GitHub CLI. Please set the issue status to 'Todo' manually via the GitHub UI and press Enter to continue: "
            wait_for_user: true

    - name: Parse Requirements
      interactive: true
      actions:
        - description: |
            Parse 'requirements_paragraph' into distinct, actionable requirements. For each requirement, generate:
              - issue_title: A concise, formal, and professional title suitable for a GitHub Issue.
              - issue_description: The description must be well-formatted for GitHub Issues (use Markdown for lists, sections, etc. as appropriate). Do not include literal \n in the description; instead, use actual carriage returns (line breaks) so the output is ready for GitHub Issues.
        # If 'confirm_each_issue' is true, display the suggested issue title and description to the user for confirmation or editing
        - description: For each parsed requirement, if 'confirm_each_issue' is true, display the suggested issue title and description to the user for confirmation or editing
          prompt: "Review the following issue draft. Would you like to edit the title or description? (Y/N): "
          wait_for_user: true
          if_yes:
            prompt:
              - "Please provide the new issue title: "
              - "Please provide the new issue description: "
            wait_for_user: true

    - name: Prevent Duplicate Issues
      interactive: true
      actions:
        - description: For each parsed requirement, search for open issues with similar title
          command: gh issue list --repo {github_repository} --state open --search "{issue_title}"
          on_duplicate:
            prompt: "A similar open issue exists: '{existing_issue_title}'. Do you want to skip creation (Y) or create anyway (N)? "
            wait_for_user: true
            if_yes:
              action: "Skip creation for this requirement"
            if_no:
              action: "Proceed to create issue"

    - name: Issue Creation
      interactive: true
      actions:
        - description: For each non-duplicate requirement, create issue automatically if 'confirm_each_issue' is false; otherwise, create after confirmation
          command: gh issue create --repo {github_repository} --title "{issue_title}" --body "{issue_description}"
          on_failure:
            prompt: "Failed to create issue '{issue_title}'. Would you like to retry (Y/N)? "
            wait_for_user: true
            if_yes:
              action: "Retry creation"
            if_no:
              action: "Continue with next requirement"

    - name: Add Issue to Project Board with 'Todo' Status
      interactive: true
      actions:
        - description: List project boards for the repository owner
          command: gh project list --owner {github_owner}
          on_failure:
            prompt: "Could not retrieve project boards for owner '{github_owner}'. Please check permissions or provide another owner: "
            wait_for_user: true
        - description: Check for existence of project board (case-insensitive)
          on_failure:
            prompt: "The specified Project Board '{project_board}' does not exist for owner '{github_owner}'. Please create it via the GitHub UI and press Enter to continue: "
            wait_for_user: true
        - description: Attempt to add issue to project board (Beta projects)
          command: gh project item-add {project_number} --url https://github.com/{github_repository}/issues/{issue_number}
          on_failure:
            prompt: "Could not add issue to the project board using the GitHub CLI. Please add the issue manually via the GitHub UI and press Enter to continue: "
            wait_for_user: true
        - description: Set issue status to 'Todo' in project board (Beta projects)
          command: gh project item-edit --project-id {project_id} --id {item_id} --field-id {status_field_id} --single-select-option-id {todo_option_id}
          on_failure:
            prompt: "Could not set issue status to 'Todo' using the GitHub CLI. Please set the status manually via the GitHub UI and press Enter to continue: "
            wait_for_user: true
        - description: Manual step: Set issue status to 'Todo' in classic project board
          on_failure:
            prompt: "Setting issue status to 'Todo' in classic project boards is not supported by the GitHub CLI. Please set the issue status to 'Todo' manually via the GitHub UI and press Enter to continue: "
            wait_for_user: true

  output:
    - For each issue created and status set:
        message: "Issue '{issue_title}' created and added to board '{project_board}'."
    - For issues skipped due to duplication:
        message: "A similar issue already exists: '{existing_issue_title}'"

  notes: |
    - All steps are interactive: the agent requests and waits for user input on errors, missing information, or when clarification is needed.
    - The process only proceeds when the required step is successfully completed.
    - No duplicate issues are created unless explicitly confirmed by the user.
    - All GitHub interaction is via the GH CLI.
    - Project board and status searches are case-insensitive.
    - The process is repeatable and deterministic.